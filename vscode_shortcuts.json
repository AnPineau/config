[
  {
    "key": "ctrl+k j",
    "command": "clever.maximize.toggleWithSidebar",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k q",
    "command": "workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+k n",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+k",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+numpad8",
    "command": "markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+numpad9",
    "command": "editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+l",
    "command": "toggleVim",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+down",
    "command": "toggleVim",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+k",
    "command": "cursorWordLeft",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "shift+k",
    "command": "cursorLeftSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "cursorWordEndLeftSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "shift+m",
    "command": "cursorRightSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+shift+m",
    "command": "cursorWordEndRightSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+k",
    "command": "",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "alt+l",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "alt+o",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "shift+alt+l",
    "command": "editor.action.copyLinesDownAction",
    "when": "vim.active"
  },
  {
    "key": "shift+alt+o",
    "command": "editor.action.copyLinesUpAction",
    "when": "vim.active"
  },
  {
    "key": "shift+p",
    "command": "cursorEndSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "shift+i",
    "command": "cursorHomeSelect",
    "when": "vim.active || neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "x",
    "command": "editor.action.deleteLines",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "backspace",
    "command": "deleteLeft",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteWordLeft",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+k",
    "command": "cursorWordPartLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+m",
    "command": "cursorWordPartRight",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+backspace",
    "command": "deleteWordPartLeft",
    "when": "editorTextFocus"
  },

  // Necessite l'extension multi-command
  {
    "key": "d",
    "command": "extension.multiCommand.ctrld",
    "when": "(vim.active || neovim.mode == 'normal') && editorTextFocus && !editorTabMovesFocus"
  },

  {
    "key": "ctrl+oem_6",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "selectNextSuggestion",
    "when": "(!vim.active || neovim.mode == 'insert') && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+o",
    "command": "selectPrevSuggestion",
    "when": "(!vim.active || neovim.mode == 'insert') && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "selectNextCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "ctrl+o",
    "command": "selectNextCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "alt+m",
    "command": "cursorRight",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "alt+k",
    "command": "cursorLeft",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+k",
    "command": "cursorWordLeft",
    "when": "!vim.active || neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+m",
    "command": "cursorWordRight",
    "when": "!vim.active || neovim.mode == 'insert'"
  },

  // -------------- NEOVIM --------------

  // CUSTOM SPECIAL KEYS (ctrl, alt, etc.)
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+l",
    "when": "editorTextFocus && neovim.mode == 'insert'",
    "args": "<Esc>m"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+c",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    "args": "y"
  },
  {
    "command": "vscode-neovim.send",
    "key": "shift+alt+l",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    // "args": ":call VSCodeNotifyVisual('', 0)<CR><backspace>"
    // "args": ":call VSCodeNotifyRange('editor.action.copyLinesDownAction', '`<', '`>', 0)<CR>"
    "args": ":call VSCodeNotifyVisual('editor.action.copyLinesDownAction', 0)"
  },




  // KEYBINDING REMOVAL (AUTOMATICALLY GOES AT THE END OF FILE)
  {
    "key": "ctrl+c",
    "command": "-vscode-neovim.escape",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+c",
    "command": "-vscode-neovim.escape",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode != 'normal'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+s"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+z"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+f"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+c"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+v"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+w"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+x"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+y"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+a"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+d"
  },
  // {
  //   "command": "-vscode-neovim.send",
  //   "key": "ctrl+backspace"
  // },
  {
    "command": "-vscode-neovim.ctrl+s",
    "key": "ctrl+s"
  }, 
  {
    "command": "-vscode-neovim.ctrl-z",
    "key": "ctrl+z"
  },
  {
    "command": "-vscode-neovim.ctrl-c",
    "key": "ctrl+c"
  },
  {
    "command": "-vscode-neovim.ctrl-v",
    "key": "ctrl+v"
  },
  {
    "command": "-vscode-neovim.ctrl-w",
    "key": "ctrl+w"
  },
  {
    "command": "-vscode-neovim.ctrl-x",
    "key": "ctrl+x"
  },
  {
    "command": "-vscode-neovim.ctrl-y",
    "key": "ctrl+y"
  },
  {
    "command": "-vscode-neovim.ctrl-a",
    "key": "ctrl+a"
  },
  {
    "command": "-vscode-neovim.ctrl-d",
    "key": "ctrl+d"
  },
  {
    "key": "ctrl+f",
    "command": "-vscode-neovim.ctrl-f"
  },
  {
    "key": "ctrl+enter",
    "command": "-vscode-neovim.ctrl-enter"
  },
 
  
]
